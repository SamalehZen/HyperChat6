// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  admin
  user
}

enum ActivityAction {
  login
  logout
  password_reset
  suspend
  unsuspend
  delete
  account_created
  account_updated
}

model User {
  id           String   @id @default(cuid())
  email        String   @unique
  passwordHash String
  role         Role     @default(user)
  isSuspended  Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  sessions     Session[]
  activityLogs ActivityLog[] @relation("ActivityOnUser")
  actorLogs    ActivityLog[] @relation("ActivityByActor")
}

model Session {
  id          String   @id @default(cuid())
  token       String   @unique
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())
  expiresAt   DateTime
  lastSeen    DateTime @default(now())
  lastIp      String?
  lastCountry String?
  lastRegion  String?
  lastCity    String?

  @@index([lastSeen])
}

model ActivityLog {
  id       String          @id @default(cuid())
  userId   String?
  actorId  String?
  action   ActivityAction
  details  Json?
  ip       String?
  country  String?
  region   String?
  city     String?
  createdAt DateTime       @default(now())

  user   User? @relation("ActivityOnUser", fields: [userId], references: [id], onDelete: SetNull)
  actor  User? @relation("ActivityByActor", fields: [actorId], references: [id], onDelete: SetNull)

  @@index([createdAt])
}

model Feedback {
  id        String   @id @default(uuid())
  userId    String
  feedback  String
  metadata  Json?
  createdAt DateTime @default(now())
}
